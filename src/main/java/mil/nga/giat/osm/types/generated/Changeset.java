/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package mil.nga.giat.osm.types.generated;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Changeset extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Changeset\",\"namespace\":\"mil.nga.giat.osm.types.generated\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":[\"null\",\"long\"]},{\"name\":\"user_name\",\"type\":[\"null\",\"string\"]},{\"name\":\"created_at\",\"type\":[\"null\",\"long\"]},{\"name\":\"closed_at\",\"type\":[\"null\",\"long\"]},{\"name\":\"open\",\"type\":\"boolean\",\"default\":\"false\"},{\"name\":\"num_changes\",\"type\":[\"null\",\"int\"]},{\"name\":\"min_lon\",\"type\":[\"null\",\"int\"]},{\"name\":\"min_lat\",\"type\":[\"null\",\"int\"]},{\"name\":\"max_lon\",\"type\":[\"null\",\"int\"]},{\"name\":\"max_lat\",\"type\":[\"null\",\"int\"]},{\"name\":\"tags\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long id;
  @Deprecated public java.lang.Long user_id;
  @Deprecated public java.lang.CharSequence user_name;
  @Deprecated public java.lang.Long created_at;
  @Deprecated public java.lang.Long closed_at;
  @Deprecated public boolean open;
  @Deprecated public java.lang.Integer num_changes;
  @Deprecated public java.lang.Integer min_lon;
  @Deprecated public java.lang.Integer min_lat;
  @Deprecated public java.lang.Integer max_lon;
  @Deprecated public java.lang.Integer max_lat;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tags;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Changeset() {}

  /**
   * All-args constructor.
   */
  public Changeset(java.lang.Long id, java.lang.Long user_id, java.lang.CharSequence user_name, java.lang.Long created_at, java.lang.Long closed_at, java.lang.Boolean open, java.lang.Integer num_changes, java.lang.Integer min_lon, java.lang.Integer min_lat, java.lang.Integer max_lon, java.lang.Integer max_lat, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tags) {
    this.id = id;
    this.user_id = user_id;
    this.user_name = user_name;
    this.created_at = created_at;
    this.closed_at = closed_at;
    this.open = open;
    this.num_changes = num_changes;
    this.min_lon = min_lon;
    this.min_lat = min_lat;
    this.max_lon = max_lon;
    this.max_lat = max_lat;
    this.tags = tags;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return user_id;
    case 2: return user_name;
    case 3: return created_at;
    case 4: return closed_at;
    case 5: return open;
    case 6: return num_changes;
    case 7: return min_lon;
    case 8: return min_lat;
    case 9: return max_lon;
    case 10: return max_lat;
    case 11: return tags;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: user_id = (java.lang.Long)value$; break;
    case 2: user_name = (java.lang.CharSequence)value$; break;
    case 3: created_at = (java.lang.Long)value$; break;
    case 4: closed_at = (java.lang.Long)value$; break;
    case 5: open = (java.lang.Boolean)value$; break;
    case 6: num_changes = (java.lang.Integer)value$; break;
    case 7: min_lon = (java.lang.Integer)value$; break;
    case 8: min_lat = (java.lang.Integer)value$; break;
    case 9: max_lon = (java.lang.Integer)value$; break;
    case 10: max_lat = (java.lang.Integer)value$; break;
    case 11: tags = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   */
  public java.lang.Long getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'user_name' field.
   */
  public java.lang.CharSequence getUserName() {
    return user_name;
  }

  /**
   * Sets the value of the 'user_name' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.CharSequence value) {
    this.user_name = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   */
  public java.lang.Long getCreatedAt() {
    return created_at;
  }

  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Long value) {
    this.created_at = value;
  }

  /**
   * Gets the value of the 'closed_at' field.
   */
  public java.lang.Long getClosedAt() {
    return closed_at;
  }

  /**
   * Sets the value of the 'closed_at' field.
   * @param value the value to set.
   */
  public void setClosedAt(java.lang.Long value) {
    this.closed_at = value;
  }

  /**
   * Gets the value of the 'open' field.
   */
  public java.lang.Boolean getOpen() {
    return open;
  }

  /**
   * Sets the value of the 'open' field.
   * @param value the value to set.
   */
  public void setOpen(java.lang.Boolean value) {
    this.open = value;
  }

  /**
   * Gets the value of the 'num_changes' field.
   */
  public java.lang.Integer getNumChanges() {
    return num_changes;
  }

  /**
   * Sets the value of the 'num_changes' field.
   * @param value the value to set.
   */
  public void setNumChanges(java.lang.Integer value) {
    this.num_changes = value;
  }

  /**
   * Gets the value of the 'min_lon' field.
   */
  public java.lang.Integer getMinLon() {
    return min_lon;
  }

  /**
   * Sets the value of the 'min_lon' field.
   * @param value the value to set.
   */
  public void setMinLon(java.lang.Integer value) {
    this.min_lon = value;
  }

  /**
   * Gets the value of the 'min_lat' field.
   */
  public java.lang.Integer getMinLat() {
    return min_lat;
  }

  /**
   * Sets the value of the 'min_lat' field.
   * @param value the value to set.
   */
  public void setMinLat(java.lang.Integer value) {
    this.min_lat = value;
  }

  /**
   * Gets the value of the 'max_lon' field.
   */
  public java.lang.Integer getMaxLon() {
    return max_lon;
  }

  /**
   * Sets the value of the 'max_lon' field.
   * @param value the value to set.
   */
  public void setMaxLon(java.lang.Integer value) {
    this.max_lon = value;
  }

  /**
   * Gets the value of the 'max_lat' field.
   */
  public java.lang.Integer getMaxLat() {
    return max_lat;
  }

  /**
   * Sets the value of the 'max_lat' field.
   * @param value the value to set.
   */
  public void setMaxLat(java.lang.Integer value) {
    this.max_lat = value;
  }

  /**
   * Gets the value of the 'tags' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.tags = value;
  }

  /** Creates a new Changeset RecordBuilder */
  public static mil.nga.giat.osm.types.generated.Changeset.Builder newBuilder() {
    return new mil.nga.giat.osm.types.generated.Changeset.Builder();
  }
  
  /** Creates a new Changeset RecordBuilder by copying an existing Builder */
  public static mil.nga.giat.osm.types.generated.Changeset.Builder newBuilder(mil.nga.giat.osm.types.generated.Changeset.Builder other) {
    return new mil.nga.giat.osm.types.generated.Changeset.Builder(other);
  }
  
  /** Creates a new Changeset RecordBuilder by copying an existing Changeset instance */
  public static mil.nga.giat.osm.types.generated.Changeset.Builder newBuilder(mil.nga.giat.osm.types.generated.Changeset other) {
    return new mil.nga.giat.osm.types.generated.Changeset.Builder(other);
  }
  
  /**
   * RecordBuilder for Changeset instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Changeset>
    implements org.apache.avro.data.RecordBuilder<Changeset> {

    private long id;
    private java.lang.Long user_id;
    private java.lang.CharSequence user_name;
    private java.lang.Long created_at;
    private java.lang.Long closed_at;
    private boolean open;
    private java.lang.Integer num_changes;
    private java.lang.Integer min_lon;
    private java.lang.Integer min_lat;
    private java.lang.Integer max_lon;
    private java.lang.Integer max_lat;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tags;

    /** Creates a new Builder */
    private Builder() {
      super(mil.nga.giat.osm.types.generated.Changeset.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(mil.nga.giat.osm.types.generated.Changeset.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.user_id)) {
        this.user_id = data().deepCopy(fields()[1].schema(), other.user_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.user_name)) {
        this.user_name = data().deepCopy(fields()[2].schema(), other.user_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.created_at)) {
        this.created_at = data().deepCopy(fields()[3].schema(), other.created_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.closed_at)) {
        this.closed_at = data().deepCopy(fields()[4].schema(), other.closed_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.open)) {
        this.open = data().deepCopy(fields()[5].schema(), other.open);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.num_changes)) {
        this.num_changes = data().deepCopy(fields()[6].schema(), other.num_changes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.min_lon)) {
        this.min_lon = data().deepCopy(fields()[7].schema(), other.min_lon);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.min_lat)) {
        this.min_lat = data().deepCopy(fields()[8].schema(), other.min_lat);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.max_lon)) {
        this.max_lon = data().deepCopy(fields()[9].schema(), other.max_lon);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.max_lat)) {
        this.max_lat = data().deepCopy(fields()[10].schema(), other.max_lat);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.tags)) {
        this.tags = data().deepCopy(fields()[11].schema(), other.tags);
        fieldSetFlags()[11] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Changeset instance */
    private Builder(mil.nga.giat.osm.types.generated.Changeset other) {
            super(mil.nga.giat.osm.types.generated.Changeset.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.user_id)) {
        this.user_id = data().deepCopy(fields()[1].schema(), other.user_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.user_name)) {
        this.user_name = data().deepCopy(fields()[2].schema(), other.user_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.created_at)) {
        this.created_at = data().deepCopy(fields()[3].schema(), other.created_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.closed_at)) {
        this.closed_at = data().deepCopy(fields()[4].schema(), other.closed_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.open)) {
        this.open = data().deepCopy(fields()[5].schema(), other.open);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.num_changes)) {
        this.num_changes = data().deepCopy(fields()[6].schema(), other.num_changes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.min_lon)) {
        this.min_lon = data().deepCopy(fields()[7].schema(), other.min_lon);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.min_lat)) {
        this.min_lat = data().deepCopy(fields()[8].schema(), other.min_lat);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.max_lon)) {
        this.max_lon = data().deepCopy(fields()[9].schema(), other.max_lon);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.max_lat)) {
        this.max_lat = data().deepCopy(fields()[10].schema(), other.max_lat);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.tags)) {
        this.tags = data().deepCopy(fields()[11].schema(), other.tags);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'user_id' field */
    public java.lang.Long getUserId() {
      return user_id;
    }
    
    /** Sets the value of the 'user_id' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setUserId(java.lang.Long value) {
      validate(fields()[1], value);
      this.user_id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'user_id' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'user_id' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearUserId() {
      user_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'user_name' field */
    public java.lang.CharSequence getUserName() {
      return user_name;
    }
    
    /** Sets the value of the 'user_name' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setUserName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.user_name = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'user_name' field has been set */
    public boolean hasUserName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'user_name' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearUserName() {
      user_name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'created_at' field */
    public java.lang.Long getCreatedAt() {
      return created_at;
    }
    
    /** Sets the value of the 'created_at' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setCreatedAt(java.lang.Long value) {
      validate(fields()[3], value);
      this.created_at = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'created_at' field has been set */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'created_at' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'closed_at' field */
    public java.lang.Long getClosedAt() {
      return closed_at;
    }
    
    /** Sets the value of the 'closed_at' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setClosedAt(java.lang.Long value) {
      validate(fields()[4], value);
      this.closed_at = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'closed_at' field has been set */
    public boolean hasClosedAt() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'closed_at' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearClosedAt() {
      closed_at = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'open' field */
    public java.lang.Boolean getOpen() {
      return open;
    }
    
    /** Sets the value of the 'open' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setOpen(boolean value) {
      validate(fields()[5], value);
      this.open = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'open' field has been set */
    public boolean hasOpen() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'open' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearOpen() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'num_changes' field */
    public java.lang.Integer getNumChanges() {
      return num_changes;
    }
    
    /** Sets the value of the 'num_changes' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setNumChanges(java.lang.Integer value) {
      validate(fields()[6], value);
      this.num_changes = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'num_changes' field has been set */
    public boolean hasNumChanges() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'num_changes' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearNumChanges() {
      num_changes = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'min_lon' field */
    public java.lang.Integer getMinLon() {
      return min_lon;
    }
    
    /** Sets the value of the 'min_lon' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setMinLon(java.lang.Integer value) {
      validate(fields()[7], value);
      this.min_lon = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'min_lon' field has been set */
    public boolean hasMinLon() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'min_lon' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearMinLon() {
      min_lon = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'min_lat' field */
    public java.lang.Integer getMinLat() {
      return min_lat;
    }
    
    /** Sets the value of the 'min_lat' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setMinLat(java.lang.Integer value) {
      validate(fields()[8], value);
      this.min_lat = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'min_lat' field has been set */
    public boolean hasMinLat() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'min_lat' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearMinLat() {
      min_lat = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'max_lon' field */
    public java.lang.Integer getMaxLon() {
      return max_lon;
    }
    
    /** Sets the value of the 'max_lon' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setMaxLon(java.lang.Integer value) {
      validate(fields()[9], value);
      this.max_lon = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'max_lon' field has been set */
    public boolean hasMaxLon() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'max_lon' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearMaxLon() {
      max_lon = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'max_lat' field */
    public java.lang.Integer getMaxLat() {
      return max_lat;
    }
    
    /** Sets the value of the 'max_lat' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setMaxLat(java.lang.Integer value) {
      validate(fields()[10], value);
      this.max_lat = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'max_lat' field has been set */
    public boolean hasMaxLat() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'max_lat' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearMaxLat() {
      max_lat = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'tags' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getTags() {
      return tags;
    }
    
    /** Sets the value of the 'tags' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder setTags(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.tags = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'tags' field has been set */
    public boolean hasTags() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'tags' field */
    public mil.nga.giat.osm.types.generated.Changeset.Builder clearTags() {
      tags = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public Changeset build() {
      try {
        Changeset record = new Changeset();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.user_id = fieldSetFlags()[1] ? this.user_id : (java.lang.Long) defaultValue(fields()[1]);
        record.user_name = fieldSetFlags()[2] ? this.user_name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.created_at = fieldSetFlags()[3] ? this.created_at : (java.lang.Long) defaultValue(fields()[3]);
        record.closed_at = fieldSetFlags()[4] ? this.closed_at : (java.lang.Long) defaultValue(fields()[4]);
        record.open = fieldSetFlags()[5] ? this.open : (java.lang.Boolean) defaultValue(fields()[5]);
        record.num_changes = fieldSetFlags()[6] ? this.num_changes : (java.lang.Integer) defaultValue(fields()[6]);
        record.min_lon = fieldSetFlags()[7] ? this.min_lon : (java.lang.Integer) defaultValue(fields()[7]);
        record.min_lat = fieldSetFlags()[8] ? this.min_lat : (java.lang.Integer) defaultValue(fields()[8]);
        record.max_lon = fieldSetFlags()[9] ? this.max_lon : (java.lang.Integer) defaultValue(fields()[9]);
        record.max_lat = fieldSetFlags()[10] ? this.max_lat : (java.lang.Integer) defaultValue(fields()[10]);
        record.tags = fieldSetFlags()[11] ? this.tags : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
