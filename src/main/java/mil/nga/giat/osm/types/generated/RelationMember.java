/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package mil.nga.giat.osm.types.generated;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RelationMember extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelationMember\",\"namespace\":\"mil.nga.giat.osm.types.generated\",\"fields\":[{\"name\":\"role\",\"type\":[\"null\",\"string\"]},{\"name\":\"member\",\"type\":\"long\"},{\"name\":\"member_type\",\"type\":{\"type\":\"enum\",\"name\":\"MemberType\",\"symbols\":[\"NODE\",\"WAY\",\"RELATION\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence role;
  @Deprecated public long member;
  @Deprecated public mil.nga.giat.osm.types.generated.MemberType member_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RelationMember() {}

  /**
   * All-args constructor.
   */
  public RelationMember(java.lang.CharSequence role, java.lang.Long member, mil.nga.giat.osm.types.generated.MemberType member_type) {
    this.role = role;
    this.member = member;
    this.member_type = member_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return role;
    case 1: return member;
    case 2: return member_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: role = (java.lang.CharSequence)value$; break;
    case 1: member = (java.lang.Long)value$; break;
    case 2: member_type = (mil.nga.giat.osm.types.generated.MemberType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'role' field.
   */
  public java.lang.CharSequence getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.lang.CharSequence value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'member' field.
   */
  public java.lang.Long getMember() {
    return member;
  }

  /**
   * Sets the value of the 'member' field.
   * @param value the value to set.
   */
  public void setMember(java.lang.Long value) {
    this.member = value;
  }

  /**
   * Gets the value of the 'member_type' field.
   */
  public mil.nga.giat.osm.types.generated.MemberType getMemberType() {
    return member_type;
  }

  /**
   * Sets the value of the 'member_type' field.
   * @param value the value to set.
   */
  public void setMemberType(mil.nga.giat.osm.types.generated.MemberType value) {
    this.member_type = value;
  }

  /** Creates a new RelationMember RecordBuilder */
  public static mil.nga.giat.osm.types.generated.RelationMember.Builder newBuilder() {
    return new mil.nga.giat.osm.types.generated.RelationMember.Builder();
  }
  
  /** Creates a new RelationMember RecordBuilder by copying an existing Builder */
  public static mil.nga.giat.osm.types.generated.RelationMember.Builder newBuilder(mil.nga.giat.osm.types.generated.RelationMember.Builder other) {
    return new mil.nga.giat.osm.types.generated.RelationMember.Builder(other);
  }
  
  /** Creates a new RelationMember RecordBuilder by copying an existing RelationMember instance */
  public static mil.nga.giat.osm.types.generated.RelationMember.Builder newBuilder(mil.nga.giat.osm.types.generated.RelationMember other) {
    return new mil.nga.giat.osm.types.generated.RelationMember.Builder(other);
  }
  
  /**
   * RecordBuilder for RelationMember instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelationMember>
    implements org.apache.avro.data.RecordBuilder<RelationMember> {

    private java.lang.CharSequence role;
    private long member;
    private mil.nga.giat.osm.types.generated.MemberType member_type;

    /** Creates a new Builder */
    private Builder() {
      super(mil.nga.giat.osm.types.generated.RelationMember.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(mil.nga.giat.osm.types.generated.RelationMember.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.role)) {
        this.role = data().deepCopy(fields()[0].schema(), other.role);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.member)) {
        this.member = data().deepCopy(fields()[1].schema(), other.member);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.member_type)) {
        this.member_type = data().deepCopy(fields()[2].schema(), other.member_type);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RelationMember instance */
    private Builder(mil.nga.giat.osm.types.generated.RelationMember other) {
            super(mil.nga.giat.osm.types.generated.RelationMember.SCHEMA$);
      if (isValidValue(fields()[0], other.role)) {
        this.role = data().deepCopy(fields()[0].schema(), other.role);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.member)) {
        this.member = data().deepCopy(fields()[1].schema(), other.member);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.member_type)) {
        this.member_type = data().deepCopy(fields()[2].schema(), other.member_type);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'role' field */
    public java.lang.CharSequence getRole() {
      return role;
    }
    
    /** Sets the value of the 'role' field */
    public mil.nga.giat.osm.types.generated.RelationMember.Builder setRole(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.role = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'role' field has been set */
    public boolean hasRole() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'role' field */
    public mil.nga.giat.osm.types.generated.RelationMember.Builder clearRole() {
      role = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'member' field */
    public java.lang.Long getMember() {
      return member;
    }
    
    /** Sets the value of the 'member' field */
    public mil.nga.giat.osm.types.generated.RelationMember.Builder setMember(long value) {
      validate(fields()[1], value);
      this.member = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'member' field has been set */
    public boolean hasMember() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'member' field */
    public mil.nga.giat.osm.types.generated.RelationMember.Builder clearMember() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'member_type' field */
    public mil.nga.giat.osm.types.generated.MemberType getMemberType() {
      return member_type;
    }
    
    /** Sets the value of the 'member_type' field */
    public mil.nga.giat.osm.types.generated.RelationMember.Builder setMemberType(mil.nga.giat.osm.types.generated.MemberType value) {
      validate(fields()[2], value);
      this.member_type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'member_type' field has been set */
    public boolean hasMemberType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'member_type' field */
    public mil.nga.giat.osm.types.generated.RelationMember.Builder clearMemberType() {
      member_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public RelationMember build() {
      try {
        RelationMember record = new RelationMember();
        record.role = fieldSetFlags()[0] ? this.role : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.member = fieldSetFlags()[1] ? this.member : (java.lang.Long) defaultValue(fields()[1]);
        record.member_type = fieldSetFlags()[2] ? this.member_type : (mil.nga.giat.osm.types.generated.MemberType) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
